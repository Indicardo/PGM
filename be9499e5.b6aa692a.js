(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{190:function(e,t,l){"use strict";l.r(t),l.d(t,"frontMatter",(function(){return r})),l.d(t,"metadata",(function(){return c})),l.d(t,"rightToc",(function(){return o})),l.d(t,"default",(function(){return u}));var b=l(1),n=l(9),a=(l(0),l(207)),r={id:"dtc",title:"Destroy the Core"},c={id:"modules/objectives/dtc",title:"Destroy the Core",description:"Players have to locate and break the enemy team's core, usually an obsidian sphere filled with lava. The lava has to leak down a certain distance for the core to be destroyed. Lava should not be available anywhere else on the map, otherwise a core leak could be faked. This can also be avoided by keeping the lava far away enough from the core and not giving players buckets or the ability to craft them.",source:"@site/docs/modules/objectives/dtc.mdx",permalink:"/docs/modules/objectives/dtc",editUrl:"https://github.com/Electroid/PGM/edit/docs/docs/modules/objectives/dtc.mdx",sidebar:"Modules",previous:{title:"Destroy the Monument",permalink:"/docs/modules/objectives/dtm"},next:{title:"Monument Modes",permalink:"/docs/modules/objectives/monument-modes"}},o=[],i={rightToc:o};function u(e){var t=e.components,l=Object(n.a)(e,["components"]);return Object(a.b)("wrapper",Object(b.a)({},i,l,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Players have to locate and break the enemy team's core, usually an obsidian sphere filled with lava. The lava has to leak down a certain distance for the core to be destroyed. Lava should not be available anywhere else on the map, otherwise a core leak could be faked. This can also be avoided by keeping the lava far away enough from the core and not giving players buckets or the ability to craft them."),Object(a.b)("div",{className:"table-container"},Object(a.b)("table",null,Object(a.b)("thead",null,Object(a.b)("tr",null,Object(a.b)("th",null,"Cores Element"),Object(a.b)("th",null,"Description"),Object(a.b)("th",null,"Value/Children"))),Object(a.b)("tbody",null,Object(a.b)("tr",null,Object(a.b)("td",null,Object(a.b)("label",null,"<cores> </cores>")),Object(a.b)("td",null,"Node containing all the defined cores."),Object(a.b)("td",null)),Object(a.b)("tr",null,Object(a.b)("th",null,"Sub-elements"),Object(a.b)("th",null),Object(a.b)("th",null)),Object(a.b)("tr",null,Object(a.b)("td",null,Object(a.b)("label",null,"<core> </core>")),Object(a.b)("td",null,"A single core."),Object(a.b)("td",null,Object(a.b)("span",{className:"badge badge--secondary"},"Core Sub-elements")))))),Object(a.b)("h5",{id:"core-attributes"},"Core Attributes"),Object(a.b)("div",{className:"table-container"},Object(a.b)("table",null,Object(a.b)("thead",null,Object(a.b)("tr",null,Object(a.b)("th",null,"Attribute"),Object(a.b)("th",null,"Description"),Object(a.b)("th",null,"Value"),Object(a.b)("th",null,"Default"))),Object(a.b)("tbody",null,Object(a.b)("tr",null,Object(a.b)("td",null,Object(a.b)("label",null,"id")),Object(a.b)("td",null,"Unique identifier used to reference cores from other places in the XML."),Object(a.b)("td",null,Object(a.b)("span",{className:"badge badge--primary"},"String")),Object(a.b)("td",null)),Object(a.b)("tr",null,Object(a.b)("td",null,Object(a.b)("label",null,"name")),Object(a.b)("td",null,"The core's name, used in notification messages."),Object(a.b)("td",null,Object(a.b)("span",{className:"badge badge--primary"},"String")),Object(a.b)("td",null)),Object(a.b)("tr",null,Object(a.b)("td",null,Object(a.b)("label",null,"required")),Object(a.b)("td",null,"Specify if this objective is required to win the match.",Object(a.b)("br",null),"Teams completing all of their required objectives will win regardless of score or blitz configuration."),Object(a.b)("td",null,Object(a.b)("span",{className:"badge badge--primary"},"true/false")),Object(a.b)("td",null,"true")),Object(a.b)("tr",null,Object(a.b)("td",null,Object(a.b)("label",null,"region")),Object(a.b)("td",null,Object(a.b)("span",{className:"badge badge--secondary",title:"Can be either this attribute or a sub-element."},"Property"),Object(a.b)("span",{className:"badge badge--danger"},"Required"),"A region containing the core."),Object(a.b)("td",null,Object(a.b)("a",{href:"/docs/modules/mechanics/regions"},"Bounded Region")),Object(a.b)("td",null)),Object(a.b)("tr",null,Object(a.b)("td",null,Object(a.b)("label",null,"leak")),Object(a.b)("td",null,"Distance below the bottom of the core ",Object(a.b)("strong",null,"region")," that the lava must leak."),Object(a.b)("td",null,Object(a.b)("span",{className:"badge badge--primary"},"Number")),Object(a.b)("td",null,"5")),Object(a.b)("tr",null,Object(a.b)("td",null,Object(a.b)("label",null,"material")),Object(a.b)("td",null,"The core casing material, used to detect breaks, and for mode changes."),Object(a.b)("td",null,Object(a.b)("a",{href:"/docs/reference/items/inventory#material_matchers"},"Single Material Pattern")),Object(a.b)("td",null,"obsidian")),Object(a.b)("tr",null,Object(a.b)("td",null,Object(a.b)("label",null,"team")),Object(a.b)("td",null,Object(a.b)("span",{className:"badge badge--danger"},"Required"),"Team the core belongs to, i.e. its owner."),Object(a.b)("td",null,Object(a.b)("a",{href:"/docs/modules/format/teams"},"Team ID")),Object(a.b)("td",null)),Object(a.b)("tr",null,Object(a.b)("td",null,Object(a.b)("label",null,"mode-changes")),Object(a.b)("td",null,"Specify if this core uses"," ",Object(a.b)("a",{href:"/docs/modules/objectives/monument-modes"},"monument modes")),Object(a.b)("td",null,Object(a.b)("span",{className:"badge badge--primary"},"true/false")),Object(a.b)("td",null)),Object(a.b)("tr",null,Object(a.b)("td",null,Object(a.b)("label",null,"show")),Object(a.b)("td",null,"Specify if the core should be hidden from all visible locations to the player. These locations include chat, the boss bar, and the scoreboard.",Object(a.b)("br",null),Object(a.b)("label",null,"NOTE:"),"The objective will also not be logged to the Database and the player will not recieve any raindrops upon completion."),Object(a.b)("td",null,Object(a.b)("span",{className:"badge badge--primary"},"true/false")),Object(a.b)("td",null,"true")),Object(a.b)("tr",null,Object(a.b)("td",null,Object(a.b)("label",null,"proximity-metric")),Object(a.b)("td",null,"Metric used to determine proximity to the core.",Object(a.b)("br",null),"Accepts ",Object(a.b)("label",null,"closest player"),", ",Object(a.b)("label",null,"closest block"),", "," ",Object(a.b)("label",null,"closest kill")," or ",Object(a.b)("label",null,"none"),"."),Object(a.b)("td",null,Object(a.b)("span",{className:"badge badge--primary"},"Proximity Metric")),Object(a.b)("td",null,Object(a.b)("label",null,"closest player"))),Object(a.b)("tr",null,Object(a.b)("td",null,Object(a.b)("label",null,"proximity-horizontal")),Object(a.b)("td",null,"Only calculate horizontal distance for core proximity."),Object(a.b)("td",null,Object(a.b)("span",{className:"badge badge--primary"},"true/false")),Object(a.b)("td",null,"false"))))),Object(a.b)("h5",{id:"core-sub-elements"},"Core Sub-elements"),Object(a.b)("div",{className:"table-container"},Object(a.b)("table",null,Object(a.b)("thead",null,Object(a.b)("tr",null,Object(a.b)("th",null,"Element"),Object(a.b)("th",null,"Description"),Object(a.b)("th",null,"Value"))),Object(a.b)("tbody",null,Object(a.b)("tr",null,Object(a.b)("td",null,Object(a.b)("label",null,"<region>")),Object(a.b)("td",null,Object(a.b)("span",{className:"badge badge--secondary",title:"Can be either this sub-element or an attribute."},"Property"),Object(a.b)("span",{className:"badge badge--danger"},"Required"),"A region containing the core."),Object(a.b)("td",null,Object(a.b)("a",{href:"/docs/modules/mechanics/regions"},"Bounded Regions")))))),Object(a.b)("pre",null,Object(a.b)("code",Object(b.a)({parentName:"pre"},{className:"language-xml"}),'<cores material="obsidian" leak="8">\n    <core team="blue">\n        <region><cuboid min="10,15,12" max="12,13,16"/></region>\n    </core>\n</cores>\n\n<cores material="obsidian" leak="4">\n    <core team="red" region="red-core"/>\n</cores>\n')))}u.isMDXComponent=!0},207:function(e,t,l){"use strict";l.d(t,"a",(function(){return s})),l.d(t,"b",(function(){return j}));var b=l(0),n=l.n(b);function a(e,t,l){return t in e?Object.defineProperty(e,t,{value:l,enumerable:!0,configurable:!0,writable:!0}):e[t]=l,e}function r(e,t){var l=Object.keys(e);if(Object.getOwnPropertySymbols){var b=Object.getOwnPropertySymbols(e);t&&(b=b.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),l.push.apply(l,b)}return l}function c(e){for(var t=1;t<arguments.length;t++){var l=null!=arguments[t]?arguments[t]:{};t%2?r(Object(l),!0).forEach((function(t){a(e,t,l[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(l)):r(Object(l)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(l,t))}))}return e}function o(e,t){if(null==e)return{};var l,b,n=function(e,t){if(null==e)return{};var l,b,n={},a=Object.keys(e);for(b=0;b<a.length;b++)l=a[b],t.indexOf(l)>=0||(n[l]=e[l]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(b=0;b<a.length;b++)l=a[b],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(n[l]=e[l])}return n}var i=n.a.createContext({}),u=function(e){var t=n.a.useContext(i),l=t;return e&&(l="function"==typeof e?e(t):c({},t,{},e)),l},s=function(e){var t=u(e.components);return n.a.createElement(i.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},O=Object(b.forwardRef)((function(e,t){var l=e.components,b=e.mdxType,a=e.originalType,r=e.parentName,i=o(e,["components","mdxType","originalType","parentName"]),s=u(l),O=b,j=s["".concat(r,".").concat(O)]||s[O]||d[O]||a;return l?n.a.createElement(j,c({ref:t},i,{components:l})):n.a.createElement(j,c({ref:t},i))}));function j(e,t){var l=arguments,b=t&&t.mdxType;if("string"==typeof e||b){var a=l.length,r=new Array(a);r[0]=O;var c={};for(var o in t)hasOwnProperty.call(t,o)&&(c[o]=t[o]);c.originalType=e,c.mdxType="string"==typeof e?e:b,r[1]=c;for(var i=2;i<a;i++)r[i]=l[i];return n.a.createElement.apply(null,r)}return n.a.createElement.apply(null,l)}O.displayName="MDXCreateElement"}}]);